# version: "3.8"

services:
  node:
    build:
      context: .
      dockerfile: ./node/Dockerfile
      args:
        - DOCKER_BUILDKIT=1
    container_name: node
    ports:
      - ${NODE_PORT}:${NODE_PORT}
    restart: "unless-stopped"
    volumes:
      - ./node/uploads:/usr/src/app/uploads
      - ./node/mnt_tppl03s005:/usr/src/app/mnt_tppl03s005
    depends_on:
      - postgres

  vue:
    # build:
    #   context: .
    #   dockerfile: ./vue/Dockerfile
    #image: nginx:1.25
    image: nginx
    container_name: vue
    ports:
      - 80:80
      - 443:443
    restart: "unless-stopped"
    volumes:
      - ./vue/dist:/usr/share/nginx/html
      #- ./vue/test:/usr/share/nginx/html
      - ./vue/default.conf:/etc/nginx/conf.d/default.conf
      # - ./_.reconext.com.2024.pem:/etc/nginx/certs/_.reconext.com.2024.pem
      - ./certs/private.key:/etc/nginx/certs/private.key
      - ./certs/certificate.crt:/etc/nginx/certs/certificate.crt
    environment:
      - TZ=Europe/Warsaw
    depends_on:
      - node

  postgres:
    image: postgres:14.5
    container_name: postgres
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: "unless-stopped"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: "unless-stopped"
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:
